name: CI
on:
  push:
    branches: [ "**" ]
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3.3.1
      - name: Build with Gradle
        run: ./gradlew build --warning-mode all

  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.filter.outputs.java }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            java:
              - 'src/java/**'

  createJar:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3.3.1
      - name: Set version env variable
        run: |
          echo "runnumber=${{ github.run_number }}" >> $GITHUB_ENV
      - run: ./gradlew jar
      - name: Upload artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: StationofdoomPlugin
          path: build/libs

  publishToRegistry:
    runs-on: ubuntu-latest
    needs: build
    if: false
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3.3.1
      - name: Publish
        run: |
          ./gradlew publish
        env:
          MAVEN_USERNAME: ${{ secrets.REPOTOKEN }}
          MAVEN_PASSWORD: ${{ secrets.REPOSECRET }}

  releaseJar:
    runs-on: ubuntu-latest
    needs: [createJar, paths-filter]
    if: ${{ github.ref == 'refs/heads/master' && needs.paths-filter.outputs.output1 == 'true' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: StationofdoomPlugin
          path: build/libs
      - name: Check folder
        run: ls build/libs
      - name: Get file name
        id: get_filename
        run: |
          FILE_PATH=$(find build/libs -name "*.jar" | head -n 1)
          FILE_NAME=$(basename "$FILE_PATH")
          version=$(echo "$FILE_NAME" | grep -o '[0-9.]\+')
          version="${version%.}"
          echo "$version"
          echo "FILENAME=$version" >> $GITHUB_ENV
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/libs/*.jar"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          tag: "v${{ env.FILENAME }}"

  publishToModrinth:
    runs-on: ubuntu-latest
    needs: createJar
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3.3.1
      - name: Set env variables
        run: |
          echo "runnumber=${{ github.run_number }}" >> $GITHUB_ENV
          echo "MODRINTH_TOKEN=${{ secrets.MODRINTH_TOKEN }}" >> $GITHUB_ENV
      - run: ./gradlew modrinth
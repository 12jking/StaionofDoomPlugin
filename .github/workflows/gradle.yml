name: CI
on:
  push:
    branches: [ "**" ]
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - name: Set up JDK 17
        uses: actions/setup-java@v3.13.0
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.1.0
      - name: Build with Gradle
        run: ./gradlew build --warning-mode all

  createJar:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - name: Set up JDK 17
        uses: actions/setup-java@v3.13.0
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.1.0
      - name: Create tag
        if: github.ref == 'refs/heads/master'
        uses: riickstaa/action-create-tag@v1.6.4
        with:
          tag_name: "v${{ env.FILENAME }}.${{ github.run_number }}"

      - name: Change version in code
        if: github.ref == 'refs/heads/master'
        run: |
          pluginVersion=$(cat build.gradle.kts | grep -Po 'val pluginVersion = "(.*?)"')
          pluginVersion="${{ env.FILENAME }}.${{ github.run_number }}"
          echo "val pluginVersion = \"$pluginVersion\"" > build.gradle.kts
          git add build.gradle.kts
          git commit -m "Update pluginVersion variable"
          git push

      - run: ./gradlew jar
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: StationofdoomPlugin
          path: build/libs

  releaseJar:
    runs-on: ubuntu-latest
    needs: createJar
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: StationofdoomPlugin
          path: build/libs
      - name: Check folder
        run: ls build/libs
      - name: Get file name
        id: get_filename
        run: |
          FILE_PATH=$(find build/libs -name "*.jar" | head -n 1)
          FILE_NAME=$(basename "$FILE_PATH")
          version=$(echo "$FILE_NAME" | grep -o '[0-9.]\+')
          version="${version%.}"
          echo "$version"
          echo "FILENAME=$version" >> $GITHUB_ENV
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/libs/*.jar"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          tag: "v${{ env.FILENAME }}.${{ github.run_number }}"
